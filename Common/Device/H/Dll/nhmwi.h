#if !defined(AFX_NHMWI_H__08B9AB5A_BA04_4677_8A3F_FDB6332FF6DA__INCLUDED_)
#define AFX_NHMWI_H__08B9AB5A_BA04_4677_8A3F_FDB6332FF6DA__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CNHMWI wrapper class

class CNHMWI : public CWnd
{
protected:
	DECLARE_DYNCREATE(CNHMWI)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x984454bc, 0x621a, 0x41be, { 0xac, 0x67, 0x63, 0x6c, 0x0, 0x80, 0x1a, 0xfc } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	long GetRejectMoneyTotalAmount();
	void SetRejectMoneyTotalAmount(long);
	long GetRejectMoneyTenThousand();
	void SetRejectMoneyTenThousand(long);
	long GetRejectMoneyFiveThousand();
	void SetRejectMoneyFiveThousand(long);
	long GetRejectMoneyOneThousand();
	void SetRejectMoneyOneThousand(long);
	long GetRejectMoneyCheck();
	void SetRejectMoneyCheck(long);
	long GetRejectMoneyUnknown();
	void SetRejectMoneyUnknown(long);
	long GetDepositMoneyStatus();
	void SetDepositMoneyStatus(long);
	long GetDepositMoneyTotalAmount();
	void SetDepositMoneyTotalAmount(long);
	long GetDepositMoneyTenThousand();
	void SetDepositMoneyTenThousand(long);
	long GetDepositMoneyFiveThousand();
	void SetDepositMoneyFiveThousand(long);
	long GetDepositMoneyOneThousand();
	void SetDepositMoneyOneThousand(long);
	long GetDepositMoneyUnknown();
	void SetDepositMoneyUnknown(long);
	long GetRetInfoStatus();
	void SetRetInfoStatus(long);
	long GetRetInfoActNum();
	void SetRetInfoActNum(long);
	long GetRetInfoRJTNum();
	void SetRetInfoRJTNum(long);
	long GetRetInfoTenThRJTNum();
	void SetRetInfoTenThRJTNum(long);
	long GetRetInfoFiveThRJTNum();
	void SetRetInfoFiveThRJTNum(long);
	long GetRetInfoOneThRJTNum();
	void SetRetInfoOneThRJTNum(long);
	long GetRetInfoCheckRJTNum();
	void SetRetInfoCheckRJTNum(long);
	long GetRetInfoUnknownRJTNum();
	void SetRetInfoUnknownRJTNum(long);

// Operations
public:
	CString TestMethod(LPCTSTR szParam1, LPCTSTR szParam2, LPCTSTR szParam3);
	void ProcSetDeviceEvent(LPCTSTR szDeviceName, LPCTSTR szEventName, LPCTSTR szEventValue);
	void ProcSetDeviceStatus(LPCTSTR szDeviceName, LPCTSTR szProperty, LPCTSTR szStatus);
	long McuEntryDisable();
	CString McuGetCardData();
	long McuInitialize();
	long McuRead();
	long McuRetract();
	long McuWrite(LPCTSTR szTrackData);
	long SprGetPaperStatus();
	long JprEmbossPrint();
	long JprGetPaperStatus();
	long JprInitialize();
	CString PbmGetMsData();
	long PbmInitialize();
	long PbmRetract();
	BOOL BrmCloseShutter();
	long BrmGetAutoloadCondition();
	long BrmGetNumberOfCash(long nCSTNo);
	long BrmGetPosition();
	long BrmGetRecycleBoxStatus();
	BOOL BrmOpenShutter();
	long BrmReady();
	BOOL BrmReadyCount();
	BOOL BrmReadyDispense();
	long McuDeinitialize();
	CString CheckDeviceAction(long nDevID, long nWaitSec);
	long McuWaitTaken();
	long SprDeinitialize();
	long SprWaitTaken();
	long PbmEject(long nWaitSec);
	long PbmDeinitialize();
	long PbmWaitTaken();
	long BrmDeinitialize();
	long BrmPresent(long nWaitSec);
	long BrmPresent2(long nWaitSec);
	long BrmCancelWaitTaken();
	long BrmRefillMoney(long nNumNotes);
	long BrmTakeupMoney(long nNumNotes);
	long BrmGetMaterialInfo();
	long UpsInitialize();
	long UpsDeinitialize();
	long UpsGetPowerStatus();
	long SplInitialize();
	long SplDeinitialize();
	long ScanDeviceAction(long nDevID, long nWaitSec, long nEventKind);
	long McuEntryEnable(long nWaitSec);
	long GetErrorDevice(long nDevID);
	long McuGetMaterialInfo();
	long SprGetMaterialInfo();
	long JprGetMaterialInfo();
	long PbmGetMaterialInfo();
	long SprInitialize();
	long JprDeinitialize();
	long McuEject(long nWaitSec);
	long SprPrint(LPCTSTR szPrintData);
	long JprPrint(LPCTSTR szPrintData);
	long PbmPrint(LPCTSTR szPrintData);
	long BrmWaitLift();
	long BrmWaitTaken();
	long ProcBackupKalTrace(LPCTSTR szFileName, long nFileSize);
	long JprGetDeviceStatus();
	long SprGetDeviceStatus();
	long SprEject(long nWaitSec);
	long SprRetract();
	long McuGetDeviceStatus();
	long BrmGetDeviceStatus();
	long BrmGetAvailDeposit();
	long BrmGetAvailWithdraw();
	long BrmAccept(long nCashCnt);
	long BrmCount();
	long BrmStack();
	long BrmReject(long nWaitSec);
	long BrmRetract();
	long BrmDispense(long nCashCnt);
	long PbmGetDeviceStatus();
	CString PbmGetBarData();
	CString PbmGetLineData();
	long PbmEntryDisable();
	long PbmEntryEnable(long nWaitSec);
	long PbmRead();
	long CmrInitialize();
	long CmrDeinitialize();
	long CmrGetDeviceStatus();
	long CmrCaptureFace(LPCTSTR szFileName);
	long CmrCaptureHand(LPCTSTR szFileName);
	long DorInitialize();
	long DorDeinitialize();
	long DorGetDeviceStatus();
	long DorGetDoorStatus();
	long LgtInitialize();
	long LgtDeinitialize();
	long LgtSetFlicker(long nIndex, long nValue);
	long LgtSetIndicator(long nValue);
	long SplSetSegment(LPCTSTR szValue);
	long SplSetLed(LPCTSTR szValue);
	long SplSetRpl(LPCTSTR szValue);
	long SplSetInform(LPCTSTR szValue);
	long UpsGetDeviceStatus();
	CString BrmGetCountResult();
	CString BrmGetRetractResult();
	CString BrmGetRefillResult();
	CString BrmGetTakeupResult();
	long McuCancelWaitTaken();
	long BrmCheckThroat();
	CString BrmGetErrorCode();
	CString PbmGetErrorCode();
	CString McuGetErrorCode();
	CString SprGetErrorCode();
	CString JprGetErrorCode();
	long BrmClearErrorCode();
	long SprClearErrorCode();
	long JprClearErrorCode();
	long McuClearErrorCode();
	long PbmClearErrorCode();
	long CmrClearErrorCode();
	long UpsClearErrorCode();
	long DorClearErrorCode();
	long BrmGetChangeUnitLock();
	long BrmInitialize();
	long BrmGetClerkCSTStatus();
	long BrmGetRejectCSTStatus();
	long BrmGetAcceptCountStatus();
	CString JprGetSensorInfo();
	CString SprGetSensorInfo();
	CString McuGetSensorInfo();
	CString PbmGetSensorInfo();
	CString BrmGetSensorInfo();
	long SprClearRetractCnt();
	long McuClearRetractCnt();
	long PbmClearRetractCnt();
	CString CmrGetErrorCode();
	CString DorGetErrorCode();
	CString UpsGetErrorCode();
	CString SprGetRetractCnt();
	CString McuGetRetractCnt();
	CString PbmGetRetractCnt();
	long ScrInitialize();
	CString ScrGetKeyString(long nWaitSec);
	long ScrSetData(LPCTSTR szDataName, LPCTSTR szDataValue);
	long ScrDisplayScreen(LPCTSTR szTag, long nIndex, LPCTSTR szData);
	long SplSetLedOnOff(long nLedIndex, long nOnOff);
	long PbmBarLineRead();
	long PbmCancelWaitTaken();
	long SprCancelWaitTaken();
	long UpsPowerOff(long nWaitSec);
	long UpsPowerRestart(long nWaitSec, long nRestartSec);
	long SplGetTestKey();
	long SplGetLoadSwitch();
	long LgtClearErrorCode();
	long LgtGetDeviceStatus();
	CString LgtGetErrorCode();
	CString SplGetErrorCode();
	long SplGetDeviceStatus();
	long SplClearErrorCode();
	CString ScrGetScreenData(long nWaitSec);
	long ScrSetScreenData(LPCTSTR szDataName, LPCTSTR szDataValue);
	long ScrSetDisplayData(LPCTSTR szDataName, LPCTSTR szDataValue);
	CString ScrGetKeyData(long nWaitSec);
	long ScrClearKeyData();
	long GetTimeoutDevice(long nDevID);
	long IrdInitialize();
	long IrdDeinitialize();
	long IrdEntryEnable();
	long IrdEntryDisable();
	long IrdReady();
	long IrdVersion();
	long IrdTest();
	CString IrdGetData();
	long IrdGetDataOK();
	long IrdGetDeviceStatus();
	long FngInitialize();
	long FngDeinitialize();
	long FngAcquire();
	CString FngGetData();
	long FngCancelAcquire();
	long FngShowData(LPCTSTR ShowFlag);
	long FngShowSize(long XPos, long YPos, long WideSize, long HeightSize);
	long FngShowColor(long RedDegree, long GreenDegree, long BlueDegree);
	long FngSetMode(LPCTSTR SecurityMode);
	CString FngGetErrorCode();
	long FngClearErrorCode();
	CString McuGetICData();
	long McuICEntryEnable(long nWaitSec);
	long McuICEntryDisable();
	long McuICSendData(long ProtocolID, LPCTSTR szSendData, long nWaitSec);
	CString IrdGetErrorCode();
	long IrdClearErrorCode();
	long FngGetDeviceStatus();
	long McuICChipInitialize();
	long BarInitialize();
	long BarDeinitialize();
	long BarGetDeviceStatus();
	long BarClearErrorCode();
	CString BarGetErrorCode();
	long BarEntryEnable();
	long BarEntryDisable();
	CString BarGetData();
	long CduInitialize();
	long CduDeinitialize();
	CString CduGetErrorCode();
	long CduClearErrorCode();
	CString CduGetSensorInfo();
	long CduGetDeviceStatus();
	long CduGetPosition();
	long CduGetRejectCSTStatus();
	long CduGetRecycleBoxStatus();
	long CduGetMaterialInfo();
	long CduGetAvailWithdraw();
	long CduOpenShutter();
	long CduCloseShutter();
	long CduWaitTaken();
	long CduCancelWaitTaken();
	long CduRetract();
	long CduPresent(long nWaitSec);
	long PinInitialize();
	long PinDeinitialize();
	CString PinGetErrorCode();
	long PinClearErrorCode();
	long PinEntryDisable();
	CString PinGetPinKeyData();
	long CduGetCSTStatus(long nCSTNo);
	long CduGetNumberOfCST();
	long CduGetValueOfCash(long nCSTNo);
	long CduGetNumberOfCash(long nCSTNo);
	long CduGetNumberOfSetCash(long nCSTNo);
	long CduDispenseCount(long nCST1Cnt, long nCST2Cnt, long nCST3Cnt, long nCST4Cnt);
	long CduDispenseAmount(long nAmount);
	long PinEntryEnable(long nEnableMode, long nMinKeyCount, long nMaxKeyCount, long bAutoEnd, LPCTSTR szActiveKeys, LPCTSTR szTerminatorKeys, LPCTSTR szCardData, long nTimeout);
	long PinMacingData(LPCTSTR szMacData);
	CString PinGetMacingData();
	long PinLoadIV(LPCTSTR szKeyName);
	long PinLoadKey(LPCTSTR szKeyName, LPCTSTR szKeyValue);
	long PinGetDeviceStatus();
	CString CduGetDispenseOfCST(long nAmount);
	long SnsInitialize();
	long SnsDeinitialize();
	long SnsClearErrorCode();
	CString SnsGetErrorCode();
	long SnsGetDeviceStatus();
	long SnsGetOperatorSwitch();
	long SnsClearOperatorSwitch();
	long ClearEventDevice(long nDevID);
	long ClearStatusDevice(long nDevID);
	long GetEventDevice(long nDevID);
	long GetStatusDevice(long nDevID);
	long CduSetMinMaxCST(LPCTSTR szMinCntData, LPCTSTR szMaxCntData);
	long CduSetNumberOfCash(LPCTSTR szCashCntData);
	long CduSetValueOfCash(LPCTSTR szCashValueData);
	long VfdInitialize(long nPortNum, long nBaudRate);
	long VfdDeinitialize();
	long VfdInitializeDisplay();
	long VfdClearDisplay();
	long VfdSetBrightnessLevel(long nLevel);
	long VfdScrollDisplay(long nShiftNum, long nRepeatNum, long nInterval);
	long VfdBlinkDisplay(long nPattern, long nNormalTime, long nReverseTime, long nRepeatNumber);
	long VfdRealTimeBitImageDisplay(LPCTSTR szFileName, long nOffsetX, long nOffsetY);
	long VfdRealTimeTextBitImageDisplay(LPCTSTR szTextData, long nTxtOffsetX, long nOffsetY, long nCharSzX, long nCharSzY, long nBoldStyle, long nItalic, LPCTSTR szFontName, LPCTSTR szFileName, long nImgOffsetX, long nImgOffsetY);
	long VfdFROMTextSave(long nMemIndex, LPCTSTR szTextData, long nOffsetX, long nOffsetY, long nCharSzX, long nCharSzY, long nBoldStyle, long nItalic, LPCTSTR szFontName);
	long VfdFROMBitImageSave(long nMemIndex, LPCTSTR szFileName, long nOffsetX, long nOffsetY);
	long VfdFROMTextBitImageSave(long nMemIndex, LPCTSTR szTextData, long nOffsetX, long nOffsetY, long nCharSzX, long nCahrSzY, long nBoldStyle, long nItalic, LPCTSTR szFontName, LPCTSTR szFileName, long nImgOffsetX, long nImgOffsetY);
	long VfdFROMDisplay(long nMemIndex);
	long VfdSetDisplayAtPowerOn(long nSMemIndex, long nEMemIndex, long nScrolled, long nInterval);
	CString VfdGetErrorCode();
	long VfdClearErrorCode();
	long VfdGetDeviceStatus();
	long SplSetInServiceLED(LPCTSTR szOnOff);
	long SplSetSuperviosrLED(LPCTSTR szOnOff);
	long SplSetErrorLED(LPCTSTR szOnOff);
	long SplSetCommunicationsLED(LPCTSTR szOnOff);
	long VfdRealTimeTextDisplay(LPCTSTR szTextData, long nOffsetX, long nOffsetY, long nCharSzX, long nCharSzY, long nBoldStyle, long nItalic, LPCTSTR szFontName);
	long VfdCurtainDisplay(long nDirection, long nSpeed, long nPattern);
	long PinInitializeEPP();
	long PinSetMacKeyName(LPCTSTR szKeyName);
	long PinSetPinKeyName(LPCTSTR szKeyName);
	long PinImportKey(LPCTSTR szKeyName, LPCTSTR szKeyEncKeyName, LPCTSTR szValue, LPCTSTR szUse);
	long PinEncryptECB(LPCTSTR szAlgorithm, LPCTSTR szKeyName, LPCTSTR szKeyEncKeyName, short sPadchar, LPCTSTR szCryptData);
	long PinDecryptECB(LPCTSTR szAlgorithm, LPCTSTR szKeyName, LPCTSTR szKeyEncKeyName, short sPadchar, LPCTSTR szCryptData);
	CString PinGetEncryptedData();
	CString PinGetDecryptedData();
	long BrmDispenseAmount(long nAmount);
	long BrmAcceptCash(long nWaitSec);
	long BrmReset();
	long BrmCancelAcceptCash();
	long BrmRejectRefused(long nWaitSec);
	long BrmSetValueOfCash(LPCTSTR szCashValueData);
	long BrmSetMinMaxCST(LPCTSTR szMinCntData, LPCTSTR szMaxCntData);
	long BrmSetNumberOfCash(LPCTSTR szCashCntData);
	long BrmGetNumberOfCST();
	long BrmGetCSTStatus(long nCSTNo);
	long BrmGetValueOfCash(long nCSTNo);
	long BrmGetNumberOfSetCash(long nCSTNo);
	CString BrmGetDispenseOfCST(long nCashAmt);
	long BrmGetNumberOfDispense(long nCSTNo);
	long BrmGetNumberOfReject(long nCSTNo);
	long BrmGetRetractCSTStatus();
	long BrmGetDepositCSTStatus(long nCashType);
	CString BrmGetNumberOfRetract();
	CString BrmGetNumberOfDeposit(long nCashType);
	long BrmSetAvailDeposit(long nDepType);
	long BrmGetCSTType(long nCSTNo);
	long SprPrintImage(LPCTSTR szImageName);
	long BrmCimGetDeviceStatus();
	long BrmCduGetDeviceStatus();
	long BrmGetShutterStatus();
	long BrmCimGetShutterStatus();
	long BrmCduGetShutterStatus();
	long CduGetShutterStatus();
	long BrmGetRetractAction();
	long BrmCimGetRetractAction();
	long BrmCduGetRetractAction();
	long CduGetRetractAction();
	long McuICChipPower(long nActType);
	long McuICGetChipPowerStatus();
	long SnsGetInternalTamper();
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_NHMWI_H__08B9AB5A_BA04_4677_8A3F_FDB6332FF6DA__INCLUDED_)
