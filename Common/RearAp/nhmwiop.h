#if !defined(AFX_NHMWIOP_H__16699E21_AB19_4567_AB3E_BE7568DE4A95__INCLUDED_)
#define AFX_NHMWIOP_H__16699E21_AB19_4567_AB3E_BE7568DE4A95__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CNHMwiOp wrapper class

class CNHMwiOp : public CWnd
{
protected:
	DECLARE_DYNCREATE(CNHMwiOp)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x2814dbbc, 0x771f, 0x439b, { 0x8b, 0x54, 0x50, 0x2a, 0x49, 0x1d, 0x4b, 0x98 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:

// Operations
public:
	void ProcSetDeviceEvent(LPCTSTR szDeviceName, LPCTSTR szEventName, LPCTSTR szEventValue);
	void ProcSetDeviceStatus(LPCTSTR szDeviceName, LPCTSTR szProperty, LPCTSTR szStatus);
	long TtuInitialize();
	long TtuDeinitialize();
	CString TtuGetErrorCode();
	long TtuClearErrorCode();
	long TtuGetDeviceStatus();
	long TtuClearScreenSync();
	long TtuSetLEDSync(long LEDNumber, LPCTSTR State);
	long TtuReadAt(long x, long y, long NumberOpChars, LPCTSTR EchoMode, LPCTSTR EchoFormat, LPCTSTR InputType, long CursorOn, long Flush, long AutoEnd, long Timeout);
	long TtuWriteAtSync(long x, long y, LPCTSTR Format, LPCTSTR Text);
	CString TtuGetReadData();
	CString CheckDeviceAction(long nDevID, long nWaitSec);
	long ScanDeviceAction(long nDevID, long nWaitSec, long nEventKind);
	long TtuClearAreaSync(long x, long y, long Width, long Hight);
	long TtuCancelRead();
	CString TestMethod(LPCTSTR szParam1, LPCTSTR szParam2, LPCTSTR szParam3);
	long ClearEventDevice(long nDevID);
	long ClearStatusDevice(long nDevID);
	long GetErrorDevice(long nDevID);
	long GetTimeoutDevice(long nDevID);
	long GetEventDevice(long nDevID);
	long GetStatusDevice(long nDevID);
	long ScrInitialize();
	long ScrClearKeyData();
	CString ScrGetKeyString(long nWaitSec);
	CString ScrGetKeyData(long nWaitSec);
	long ScrSetData(LPCTSTR szDataName, LPCTSTR szDataValue);
	CString ScrGetScreenData(long nWaitSec);
	long ScrSetScreenData(LPCTSTR szDataName, LPCTSTR szDataValue);
	long ScrSetDisplayData(LPCTSTR szDataName, LPCTSTR szDataValue);
	long ScrDisplayScreen(LPCTSTR szTag, long nIndex, LPCTSTR szData);
	long TtuReadAtEx(long x, long y, long NumberOfChars, LPCTSTR EchoMode, LPCTSTR EchoFormat, LPCTSTR InputType, long CursorOn, long Flush, long AutoEnd, long Timeout, LPCTSTR ActiveKeys, LPCTSTR ActiveCmdKeys, LPCTSTR TerminateCmdKeys);
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_NHMWIOP_H__16699E21_AB19_4567_AB3E_BE7568DE4A95__INCLUDED_)
