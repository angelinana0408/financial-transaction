// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "nhmwi.h"

/////////////////////////////////////////////////////////////////////////////
// CNHMWI

IMPLEMENT_DYNCREATE(CNHMWI, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CNHMWI properties

long CNHMWI::GetRejectMoneyTotalAmount()
{
	long result;
	GetProperty(0x1, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRejectMoneyTotalAmount(long propVal)
{
	SetProperty(0x1, VT_I4, propVal);
}

long CNHMWI::GetRejectMoneyTenThousand()
{
	long result;
	GetProperty(0x2, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRejectMoneyTenThousand(long propVal)
{
	SetProperty(0x2, VT_I4, propVal);
}

long CNHMWI::GetRejectMoneyFiveThousand()
{
	long result;
	GetProperty(0x3, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRejectMoneyFiveThousand(long propVal)
{
	SetProperty(0x3, VT_I4, propVal);
}

long CNHMWI::GetRejectMoneyOneThousand()
{
	long result;
	GetProperty(0x4, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRejectMoneyOneThousand(long propVal)
{
	SetProperty(0x4, VT_I4, propVal);
}

long CNHMWI::GetRejectMoneyCheck()
{
	long result;
	GetProperty(0x5, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRejectMoneyCheck(long propVal)
{
	SetProperty(0x5, VT_I4, propVal);
}

long CNHMWI::GetRejectMoneyUnknown()
{
	long result;
	GetProperty(0x6, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRejectMoneyUnknown(long propVal)
{
	SetProperty(0x6, VT_I4, propVal);
}

long CNHMWI::GetDepositMoneyStatus()
{
	long result;
	GetProperty(0x7, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetDepositMoneyStatus(long propVal)
{
	SetProperty(0x7, VT_I4, propVal);
}

long CNHMWI::GetDepositMoneyTotalAmount()
{
	long result;
	GetProperty(0x8, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetDepositMoneyTotalAmount(long propVal)
{
	SetProperty(0x8, VT_I4, propVal);
}

long CNHMWI::GetDepositMoneyTenThousand()
{
	long result;
	GetProperty(0x9, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetDepositMoneyTenThousand(long propVal)
{
	SetProperty(0x9, VT_I4, propVal);
}

long CNHMWI::GetDepositMoneyFiveThousand()
{
	long result;
	GetProperty(0xa, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetDepositMoneyFiveThousand(long propVal)
{
	SetProperty(0xa, VT_I4, propVal);
}

long CNHMWI::GetDepositMoneyOneThousand()
{
	long result;
	GetProperty(0xb, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetDepositMoneyOneThousand(long propVal)
{
	SetProperty(0xb, VT_I4, propVal);
}

long CNHMWI::GetDepositMoneyUnknown()
{
	long result;
	GetProperty(0xc, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetDepositMoneyUnknown(long propVal)
{
	SetProperty(0xc, VT_I4, propVal);
}

long CNHMWI::GetRetInfoStatus()
{
	long result;
	GetProperty(0xd, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRetInfoStatus(long propVal)
{
	SetProperty(0xd, VT_I4, propVal);
}

long CNHMWI::GetRetInfoActNum()
{
	long result;
	GetProperty(0xe, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRetInfoActNum(long propVal)
{
	SetProperty(0xe, VT_I4, propVal);
}

long CNHMWI::GetRetInfoRJTNum()
{
	long result;
	GetProperty(0xf, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRetInfoRJTNum(long propVal)
{
	SetProperty(0xf, VT_I4, propVal);
}

long CNHMWI::GetRetInfoTenThRJTNum()
{
	long result;
	GetProperty(0x10, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRetInfoTenThRJTNum(long propVal)
{
	SetProperty(0x10, VT_I4, propVal);
}

long CNHMWI::GetRetInfoFiveThRJTNum()
{
	long result;
	GetProperty(0x11, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRetInfoFiveThRJTNum(long propVal)
{
	SetProperty(0x11, VT_I4, propVal);
}

long CNHMWI::GetRetInfoOneThRJTNum()
{
	long result;
	GetProperty(0x12, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRetInfoOneThRJTNum(long propVal)
{
	SetProperty(0x12, VT_I4, propVal);
}

long CNHMWI::GetRetInfoCheckRJTNum()
{
	long result;
	GetProperty(0x13, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRetInfoCheckRJTNum(long propVal)
{
	SetProperty(0x13, VT_I4, propVal);
}

long CNHMWI::GetRetInfoUnknownRJTNum()
{
	long result;
	GetProperty(0x14, VT_I4, (void*)&result);
	return result;
}

void CNHMWI::SetRetInfoUnknownRJTNum(long propVal)
{
	SetProperty(0x14, VT_I4, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CNHMWI operations

CString CNHMWI::TestMethod(LPCTSTR szParam1, LPCTSTR szParam2, LPCTSTR szParam3)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x15, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		szParam1, szParam2, szParam3);
	return result;
}

void CNHMWI::ProcSetDeviceEvent(LPCTSTR szDeviceName, LPCTSTR szEventName, LPCTSTR szEventValue)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x16, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 szDeviceName, szEventName, szEventValue);
}

void CNHMWI::ProcSetDeviceStatus(LPCTSTR szDeviceName, LPCTSTR szProperty, LPCTSTR szStatus)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x17, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 szDeviceName, szProperty, szStatus);
}

long CNHMWI::McuEntryDisable()
{
	long result;
	InvokeHelper(0x18, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::McuGetCardData()
{
	CString result;
	InvokeHelper(0x19, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuInitialize()
{
	long result;
	InvokeHelper(0x1a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuRead()
{
	long result;
	InvokeHelper(0x1b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuRetract()
{
	long result;
	InvokeHelper(0x1c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuWrite(LPCTSTR szTrackData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szTrackData);
	return result;
}

long CNHMWI::SprGetPaperStatus()
{
	long result;
	InvokeHelper(0x1e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::JprEmbossPrint()
{
	long result;
	InvokeHelper(0x1f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::JprGetPaperStatus()
{
	long result;
	InvokeHelper(0x20, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::JprInitialize()
{
	long result;
	InvokeHelper(0x21, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::PbmGetMsData()
{
	CString result;
	InvokeHelper(0x22, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmInitialize()
{
	long result;
	InvokeHelper(0x23, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmRetract()
{
	long result;
	InvokeHelper(0x24, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CNHMWI::BrmCloseShutter()
{
	BOOL result;
	InvokeHelper(0x25, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetAutoloadCondition()
{
	long result;
	InvokeHelper(0x26, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetNumberOfCash(long nCSTNo)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x27, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCSTNo);
	return result;
}

long CNHMWI::BrmGetPosition()
{
	long result;
	InvokeHelper(0x28, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetRecycleBoxStatus()
{
	long result;
	InvokeHelper(0x29, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CNHMWI::BrmOpenShutter()
{
	BOOL result;
	InvokeHelper(0x2a, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmReady()
{
	long result;
	InvokeHelper(0x2b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CNHMWI::BrmReadyCount()
{
	BOOL result;
	InvokeHelper(0x2c, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CNHMWI::BrmReadyDispense()
{
	BOOL result;
	InvokeHelper(0x2d, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuDeinitialize()
{
	long result;
	InvokeHelper(0x2e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CheckDeviceAction(long nDevID, long nWaitSec)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x2f, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nDevID, nWaitSec);
	return result;
}

long CNHMWI::McuWaitTaken()
{
	long result;
	InvokeHelper(0x30, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprDeinitialize()
{
	long result;
	InvokeHelper(0x31, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprWaitTaken()
{
	long result;
	InvokeHelper(0x32, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmEject(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x33, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::PbmDeinitialize()
{
	long result;
	InvokeHelper(0x34, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmWaitTaken()
{
	long result;
	InvokeHelper(0x35, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmDeinitialize()
{
	long result;
	InvokeHelper(0x36, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmPresent(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x37, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::BrmPresent2(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x38, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::BrmCancelWaitTaken()
{
	long result;
	InvokeHelper(0x39, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmRefillMoney(long nNumNotes)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nNumNotes);
	return result;
}

long CNHMWI::BrmTakeupMoney(long nNumNotes)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nNumNotes);
	return result;
}

long CNHMWI::BrmGetMaterialInfo()
{
	long result;
	InvokeHelper(0x3c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UpsInitialize()
{
	long result;
	InvokeHelper(0x3d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UpsDeinitialize()
{
	long result;
	InvokeHelper(0x3e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UpsGetPowerStatus()
{
	long result;
	InvokeHelper(0x3f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SplInitialize()
{
	long result;
	InvokeHelper(0x40, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SplDeinitialize()
{
	long result;
	InvokeHelper(0x41, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::ScanDeviceAction(long nDevID, long nWaitSec, long nEventKind)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x42, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDevID, nWaitSec, nEventKind);
	return result;
}

long CNHMWI::McuEntryEnable(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x43, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::GetErrorDevice(long nDevID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x44, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDevID);
	return result;
}

long CNHMWI::McuGetMaterialInfo()
{
	long result;
	InvokeHelper(0x45, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprGetMaterialInfo()
{
	long result;
	InvokeHelper(0x46, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::JprGetMaterialInfo()
{
	long result;
	InvokeHelper(0x47, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmGetMaterialInfo()
{
	long result;
	InvokeHelper(0x48, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprInitialize()
{
	long result;
	InvokeHelper(0x49, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::JprDeinitialize()
{
	long result;
	InvokeHelper(0x4a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuEject(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x4b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::SprPrint(LPCTSTR szPrintData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x4c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szPrintData);
	return result;
}

long CNHMWI::JprPrint(LPCTSTR szPrintData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x4d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szPrintData);
	return result;
}

long CNHMWI::PbmPrint(LPCTSTR szPrintData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x4e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szPrintData);
	return result;
}

long CNHMWI::BrmWaitLift()
{
	long result;
	InvokeHelper(0x4f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmWaitTaken()
{
	long result;
	InvokeHelper(0x50, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::ProcBackupKalTrace(LPCTSTR szFileName, long nFileSize)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x51, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFileName, nFileSize);
	return result;
}

long CNHMWI::JprGetDeviceStatus()
{
	long result;
	InvokeHelper(0x52, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprGetDeviceStatus()
{
	long result;
	InvokeHelper(0x53, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprEject(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x54, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::SprRetract()
{
	long result;
	InvokeHelper(0x55, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuGetDeviceStatus()
{
	long result;
	InvokeHelper(0x56, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetDeviceStatus()
{
	long result;
	InvokeHelper(0x57, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetAvailDeposit()
{
	long result;
	InvokeHelper(0x58, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetAvailWithdraw()
{
	long result;
	InvokeHelper(0x59, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmAccept(long nCashCnt)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x5a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCashCnt);
	return result;
}

long CNHMWI::BrmCount()
{
	long result;
	InvokeHelper(0x5b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmStack()
{
	long result;
	InvokeHelper(0x5c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmReject(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x5d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::BrmRetract()
{
	long result;
	InvokeHelper(0x5e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmDispense(long nCashCnt)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x5f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCashCnt);
	return result;
}

long CNHMWI::PbmGetDeviceStatus()
{
	long result;
	InvokeHelper(0x60, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::PbmGetBarData()
{
	CString result;
	InvokeHelper(0x61, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::PbmGetLineData()
{
	CString result;
	InvokeHelper(0x62, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmEntryDisable()
{
	long result;
	InvokeHelper(0x63, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmEntryEnable(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x64, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::PbmRead()
{
	long result;
	InvokeHelper(0x65, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CmrInitialize()
{
	long result;
	InvokeHelper(0x66, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CmrDeinitialize()
{
	long result;
	InvokeHelper(0x67, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CmrGetDeviceStatus()
{
	long result;
	InvokeHelper(0x68, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CmrCaptureFace(LPCTSTR szFileName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x69, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFileName);
	return result;
}

long CNHMWI::CmrCaptureHand(LPCTSTR szFileName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x6a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFileName);
	return result;
}

long CNHMWI::DorInitialize()
{
	long result;
	InvokeHelper(0x6b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DorDeinitialize()
{
	long result;
	InvokeHelper(0x6c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DorGetDeviceStatus()
{
	long result;
	InvokeHelper(0x6d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DorGetDoorStatus()
{
	long result;
	InvokeHelper(0x6e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::LgtInitialize()
{
	long result;
	InvokeHelper(0x6f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::LgtDeinitialize()
{
	long result;
	InvokeHelper(0x70, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::LgtSetFlicker(long nIndex, long nValue)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x71, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nIndex, nValue);
	return result;
}

long CNHMWI::LgtSetIndicator(long nValue)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x72, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nValue);
	return result;
}

long CNHMWI::SplSetSegment(LPCTSTR szValue)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x73, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szValue);
	return result;
}

long CNHMWI::SplSetLed(LPCTSTR szValue)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x74, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szValue);
	return result;
}

long CNHMWI::SplSetRpl(LPCTSTR szValue)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x75, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szValue);
	return result;
}

long CNHMWI::SplSetInform(LPCTSTR szValue)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x76, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szValue);
	return result;
}

long CNHMWI::UpsGetDeviceStatus()
{
	long result;
	InvokeHelper(0x77, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BrmGetCountResult()
{
	CString result;
	InvokeHelper(0x78, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BrmGetRetractResult()
{
	CString result;
	InvokeHelper(0x79, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BrmGetRefillResult()
{
	CString result;
	InvokeHelper(0x7a, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BrmGetTakeupResult()
{
	CString result;
	InvokeHelper(0x7b, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuCancelWaitTaken()
{
	long result;
	InvokeHelper(0x7c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmCheckThroat()
{
	long result;
	InvokeHelper(0x7d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BrmGetErrorCode()
{
	CString result;
	InvokeHelper(0x7e, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::PbmGetErrorCode()
{
	CString result;
	InvokeHelper(0x7f, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::McuGetErrorCode()
{
	CString result;
	InvokeHelper(0x80, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::SprGetErrorCode()
{
	CString result;
	InvokeHelper(0x81, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::JprGetErrorCode()
{
	CString result;
	InvokeHelper(0x82, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmClearErrorCode()
{
	long result;
	InvokeHelper(0x83, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprClearErrorCode()
{
	long result;
	InvokeHelper(0x84, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::JprClearErrorCode()
{
	long result;
	InvokeHelper(0x85, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuClearErrorCode()
{
	long result;
	InvokeHelper(0x86, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmClearErrorCode()
{
	long result;
	InvokeHelper(0x87, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CmrClearErrorCode()
{
	long result;
	InvokeHelper(0x88, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UpsClearErrorCode()
{
	long result;
	InvokeHelper(0x89, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::DorClearErrorCode()
{
	long result;
	InvokeHelper(0x8a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetChangeUnitLock()
{
	long result;
	InvokeHelper(0x8b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmInitialize()
{
	long result;
	InvokeHelper(0x8c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetClerkCSTStatus()
{
	long result;
	InvokeHelper(0x8d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetRejectCSTStatus()
{
	long result;
	InvokeHelper(0x8e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetAcceptCountStatus()
{
	long result;
	InvokeHelper(0x8f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::JprGetSensorInfo()
{
	CString result;
	InvokeHelper(0x90, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::SprGetSensorInfo()
{
	CString result;
	InvokeHelper(0x91, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::McuGetSensorInfo()
{
	CString result;
	InvokeHelper(0x92, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::PbmGetSensorInfo()
{
	CString result;
	InvokeHelper(0x93, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BrmGetSensorInfo()
{
	CString result;
	InvokeHelper(0x94, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprClearRetractCnt()
{
	long result;
	InvokeHelper(0x95, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuClearRetractCnt()
{
	long result;
	InvokeHelper(0x96, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmClearRetractCnt()
{
	long result;
	InvokeHelper(0x97, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CmrGetErrorCode()
{
	CString result;
	InvokeHelper(0x98, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::DorGetErrorCode()
{
	CString result;
	InvokeHelper(0x99, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::UpsGetErrorCode()
{
	CString result;
	InvokeHelper(0x9a, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::SprGetRetractCnt()
{
	CString result;
	InvokeHelper(0x9b, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::McuGetRetractCnt()
{
	CString result;
	InvokeHelper(0x9c, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::PbmGetRetractCnt()
{
	CString result;
	InvokeHelper(0x9d, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::ScrInitialize()
{
	long result;
	InvokeHelper(0x9e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::ScrGetKeyString(long nWaitSec)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x9f, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::ScrSetData(LPCTSTR szDataName, LPCTSTR szDataValue)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0xa0, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szDataName, szDataValue);
	return result;
}

long CNHMWI::ScrDisplayScreen(LPCTSTR szTag, long nIndex, LPCTSTR szData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_BSTR;
	InvokeHelper(0xa1, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szTag, nIndex, szData);
	return result;
}

long CNHMWI::SplSetLedOnOff(long nLedIndex, long nOnOff)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xa2, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nLedIndex, nOnOff);
	return result;
}

long CNHMWI::PbmBarLineRead()
{
	long result;
	InvokeHelper(0xa3, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PbmCancelWaitTaken()
{
	long result;
	InvokeHelper(0xa4, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SprCancelWaitTaken()
{
	long result;
	InvokeHelper(0xa5, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::UpsPowerOff(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xa6, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::UpsPowerRestart(long nWaitSec, long nRestartSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xa7, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec, nRestartSec);
	return result;
}

long CNHMWI::SplGetTestKey()
{
	long result;
	InvokeHelper(0xa8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SplGetLoadSwitch()
{
	long result;
	InvokeHelper(0xa9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::LgtClearErrorCode()
{
	long result;
	InvokeHelper(0xaa, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::LgtGetDeviceStatus()
{
	long result;
	InvokeHelper(0xab, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::LgtGetErrorCode()
{
	CString result;
	InvokeHelper(0xac, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::SplGetErrorCode()
{
	CString result;
	InvokeHelper(0xad, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::SplGetDeviceStatus()
{
	long result;
	InvokeHelper(0xae, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SplClearErrorCode()
{
	long result;
	InvokeHelper(0xaf, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::ScrGetScreenData(long nWaitSec)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xb0, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::ScrSetScreenData(LPCTSTR szDataName, LPCTSTR szDataValue)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0xb1, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szDataName, szDataValue);
	return result;
}

long CNHMWI::ScrSetDisplayData(LPCTSTR szDataName, LPCTSTR szDataValue)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0xb2, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szDataName, szDataValue);
	return result;
}

CString CNHMWI::ScrGetKeyData(long nWaitSec)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xb3, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::ScrClearKeyData()
{
	long result;
	InvokeHelper(0xb4, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::GetTimeoutDevice(long nDevID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xb5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDevID);
	return result;
}

long CNHMWI::IrdInitialize()
{
	long result;
	InvokeHelper(0xb6, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdDeinitialize()
{
	long result;
	InvokeHelper(0xb7, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdEntryEnable()
{
	long result;
	InvokeHelper(0xb8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdEntryDisable()
{
	long result;
	InvokeHelper(0xb9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdReady()
{
	long result;
	InvokeHelper(0xba, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdVersion()
{
	long result;
	InvokeHelper(0xbb, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdTest()
{
	long result;
	InvokeHelper(0xbc, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::IrdGetData()
{
	CString result;
	InvokeHelper(0xbd, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdGetDataOK()
{
	long result;
	InvokeHelper(0xbe, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdGetDeviceStatus()
{
	long result;
	InvokeHelper(0xbf, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::FngInitialize()
{
	long result;
	InvokeHelper(0xc0, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::FngDeinitialize()
{
	long result;
	InvokeHelper(0xc1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::FngAcquire()
{
	long result;
	InvokeHelper(0xc2, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::FngGetData()
{
	CString result;
	InvokeHelper(0xc3, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::FngCancelAcquire()
{
	long result;
	InvokeHelper(0xc4, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::FngShowData(LPCTSTR ShowFlag)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xc5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		ShowFlag);
	return result;
}

long CNHMWI::FngShowSize(long XPos, long YPos, long WideSize, long HeightSize)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xc6, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		XPos, YPos, WideSize, HeightSize);
	return result;
}

long CNHMWI::FngShowColor(long RedDegree, long GreenDegree, long BlueDegree)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xc7, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		RedDegree, GreenDegree, BlueDegree);
	return result;
}

long CNHMWI::FngSetMode(LPCTSTR SecurityMode)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xc8, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		SecurityMode);
	return result;
}

CString CNHMWI::FngGetErrorCode()
{
	CString result;
	InvokeHelper(0xc9, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::FngClearErrorCode()
{
	long result;
	InvokeHelper(0xca, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::McuGetICData()
{
	CString result;
	InvokeHelper(0xcb, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuICEntryEnable(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xcc, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::McuICEntryDisable()
{
	long result;
	InvokeHelper(0xcd, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuICSendData(long ProtocolID, LPCTSTR szSendData, long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0xce, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		ProtocolID, szSendData, nWaitSec);
	return result;
}

CString CNHMWI::IrdGetErrorCode()
{
	CString result;
	InvokeHelper(0xcf, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::IrdClearErrorCode()
{
	long result;
	InvokeHelper(0xd0, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::FngGetDeviceStatus()
{
	long result;
	InvokeHelper(0xd1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuICChipInitialize()
{
	long result;
	InvokeHelper(0xd2, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BarInitialize()
{
	long result;
	InvokeHelper(0xd3, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BarDeinitialize()
{
	long result;
	InvokeHelper(0xd4, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BarGetDeviceStatus()
{
	long result;
	InvokeHelper(0xd5, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BarClearErrorCode()
{
	long result;
	InvokeHelper(0xd6, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BarGetErrorCode()
{
	CString result;
	InvokeHelper(0xd7, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::BarEntryEnable()
{
	long result;
	InvokeHelper(0xd8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BarEntryDisable()
{
	long result;
	InvokeHelper(0xd9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BarGetData()
{
	CString result;
	InvokeHelper(0xda, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduInitialize()
{
	long result;
	InvokeHelper(0xdb, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduDeinitialize()
{
	long result;
	InvokeHelper(0xdc, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CduGetErrorCode()
{
	CString result;
	InvokeHelper(0xdd, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduClearErrorCode()
{
	long result;
	InvokeHelper(0xde, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CduGetSensorInfo()
{
	CString result;
	InvokeHelper(0xdf, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduGetDeviceStatus()
{
	long result;
	InvokeHelper(0xe0, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduGetPosition()
{
	long result;
	InvokeHelper(0xe1, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduGetRejectCSTStatus()
{
	long result;
	InvokeHelper(0xe2, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduGetRecycleBoxStatus()
{
	long result;
	InvokeHelper(0xe3, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduGetMaterialInfo()
{
	long result;
	InvokeHelper(0xe4, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduGetAvailWithdraw()
{
	long result;
	InvokeHelper(0xe5, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduOpenShutter()
{
	long result;
	InvokeHelper(0xe6, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduCloseShutter()
{
	long result;
	InvokeHelper(0xe7, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduWaitTaken()
{
	long result;
	InvokeHelper(0xe8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduCancelWaitTaken()
{
	long result;
	InvokeHelper(0xe9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduRetract()
{
	long result;
	InvokeHelper(0xea, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduPresent(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xeb, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::PinInitialize()
{
	long result;
	InvokeHelper(0xec, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PinDeinitialize()
{
	long result;
	InvokeHelper(0xed, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::PinGetErrorCode()
{
	CString result;
	InvokeHelper(0xee, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::PinClearErrorCode()
{
	long result;
	InvokeHelper(0xef, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PinEntryDisable()
{
	long result;
	InvokeHelper(0xf0, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::PinGetPinKeyData()
{
	CString result;
	InvokeHelper(0xf1, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduGetCSTStatus(long nCSTNo)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xf2, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCSTNo);
	return result;
}

long CNHMWI::CduGetNumberOfCST()
{
	long result;
	InvokeHelper(0xf3, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduGetValueOfCash(long nCSTNo)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xf4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCSTNo);
	return result;
}

long CNHMWI::CduGetNumberOfCash(long nCSTNo)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xf5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCSTNo);
	return result;
}

long CNHMWI::CduGetNumberOfSetCash(long nCSTNo)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xf6, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCSTNo);
	return result;
}

long CNHMWI::CduDispenseCount(long nCST1Cnt, long nCST2Cnt, long nCST3Cnt, long nCST4Cnt)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xf7, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCST1Cnt, nCST2Cnt, nCST3Cnt, nCST4Cnt);
	return result;
}

long CNHMWI::CduDispenseAmount(long nAmount)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xf8, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nAmount);
	return result;
}

long CNHMWI::PinEntryEnable(long nEnableMode, long nMinKeyCount, long nMaxKeyCount, long bAutoEnd, LPCTSTR szActiveKeys, LPCTSTR szTerminatorKeys, LPCTSTR szCardData, long nTimeout)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR VTS_BSTR VTS_BSTR VTS_I4;
	InvokeHelper(0xf9, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nEnableMode, nMinKeyCount, nMaxKeyCount, bAutoEnd, szActiveKeys, szTerminatorKeys, szCardData, nTimeout);
	return result;
}

long CNHMWI::PinMacingData(LPCTSTR szMacData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xfa, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szMacData);
	return result;
}

CString CNHMWI::PinGetMacingData()
{
	CString result;
	InvokeHelper(0xfb, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::PinLoadIV(LPCTSTR szKeyName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xfc, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szKeyName);
	return result;
}

long CNHMWI::PinLoadKey(LPCTSTR szKeyName, LPCTSTR szKeyValue)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0xfd, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szKeyName, szKeyValue);
	return result;
}

long CNHMWI::PinGetDeviceStatus()
{
	long result;
	InvokeHelper(0xfe, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::CduGetDispenseOfCST(long nAmount)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xff, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nAmount);
	return result;
}

long CNHMWI::SnsInitialize()
{
	long result;
	InvokeHelper(0x100, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SnsDeinitialize()
{
	long result;
	InvokeHelper(0x101, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SnsClearErrorCode()
{
	long result;
	InvokeHelper(0x102, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CNHMWI::SnsGetErrorCode()
{
	CString result;
	InvokeHelper(0x103, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::SnsGetDeviceStatus()
{
	long result;
	InvokeHelper(0x104, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SnsGetOperatorSwitch()
{
	long result;
	InvokeHelper(0x105, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SnsClearOperatorSwitch()
{
	long result;
	InvokeHelper(0x106, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::ClearEventDevice(long nDevID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x107, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDevID);
	return result;
}

long CNHMWI::ClearStatusDevice(long nDevID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x108, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDevID);
	return result;
}

long CNHMWI::GetEventDevice(long nDevID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x109, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDevID);
	return result;
}

long CNHMWI::GetStatusDevice(long nDevID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x10a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDevID);
	return result;
}

long CNHMWI::CduSetMinMaxCST(LPCTSTR szMinCntData, LPCTSTR szMaxCntData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x10b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szMinCntData, szMaxCntData);
	return result;
}

long CNHMWI::CduSetNumberOfCash(LPCTSTR szCashCntData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x10c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szCashCntData);
	return result;
}

long CNHMWI::CduSetValueOfCash(LPCTSTR szCashValueData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x10d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szCashValueData);
	return result;
}

long CNHMWI::VfdInitialize(long nPortNum, long nBaudRate)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x10e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nPortNum, nBaudRate);
	return result;
}

long CNHMWI::VfdDeinitialize()
{
	long result;
	InvokeHelper(0x10f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::VfdInitializeDisplay()
{
	long result;
	InvokeHelper(0x110, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::VfdClearDisplay()
{
	long result;
	InvokeHelper(0x111, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::VfdSetBrightnessLevel(long nLevel)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x112, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nLevel);
	return result;
}

long CNHMWI::VfdScrollDisplay(long nShiftNum, long nRepeatNum, long nInterval)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x113, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nShiftNum, nRepeatNum, nInterval);
	return result;
}

long CNHMWI::VfdBlinkDisplay(long nPattern, long nNormalTime, long nReverseTime, long nRepeatNumber)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x114, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nPattern, nNormalTime, nReverseTime, nRepeatNumber);
	return result;
}

long CNHMWI::VfdRealTimeBitImageDisplay(LPCTSTR szFileName, long nOffsetX, long nOffsetY)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0x115, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szFileName, nOffsetX, nOffsetY);
	return result;
}

long CNHMWI::VfdRealTimeTextBitImageDisplay(LPCTSTR szTextData, long nTxtOffsetX, long nOffsetY, long nCharSzX, long nCharSzY, long nBoldStyle, long nItalic, LPCTSTR szFontName, LPCTSTR szFileName, long nImgOffsetX, long nImgOffsetY)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0x116, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szTextData, nTxtOffsetX, nOffsetY, nCharSzX, nCharSzY, nBoldStyle, nItalic, szFontName, szFileName, nImgOffsetX, nImgOffsetY);
	return result;
}

long CNHMWI::VfdFROMTextSave(long nMemIndex, LPCTSTR szTextData, long nOffsetX, long nOffsetY, long nCharSzX, long nCharSzY, long nBoldStyle, long nItalic, LPCTSTR szFontName)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x117, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nMemIndex, szTextData, nOffsetX, nOffsetY, nCharSzX, nCharSzY, nBoldStyle, nItalic, szFontName);
	return result;
}

long CNHMWI::VfdFROMBitImageSave(long nMemIndex, LPCTSTR szFileName, long nOffsetX, long nOffsetY)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0x118, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nMemIndex, szFileName, nOffsetX, nOffsetY);
	return result;
}

long CNHMWI::VfdFROMTextBitImageSave(long nMemIndex, LPCTSTR szTextData, long nOffsetX, long nOffsetY, long nCharSzX, long nCahrSzY, long nBoldStyle, long nItalic, LPCTSTR szFontName, LPCTSTR szFileName, long nImgOffsetX, long nImgOffsetY)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0x119, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nMemIndex, szTextData, nOffsetX, nOffsetY, nCharSzX, nCahrSzY, nBoldStyle, nItalic, szFontName, szFileName, nImgOffsetX, nImgOffsetY);
	return result;
}

long CNHMWI::VfdFROMDisplay(long nMemIndex)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x11a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nMemIndex);
	return result;
}

long CNHMWI::VfdSetDisplayAtPowerOn(long nSMemIndex, long nEMemIndex, long nScrolled, long nInterval)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x11b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nSMemIndex, nEMemIndex, nScrolled, nInterval);
	return result;
}

CString CNHMWI::VfdGetErrorCode()
{
	CString result;
	InvokeHelper(0x11c, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::VfdClearErrorCode()
{
	long result;
	InvokeHelper(0x11d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::VfdGetDeviceStatus()
{
	long result;
	InvokeHelper(0x11e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SplSetInServiceLED(LPCTSTR szOnOff)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x11f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szOnOff);
	return result;
}

long CNHMWI::SplSetSuperviosrLED(LPCTSTR szOnOff)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x120, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szOnOff);
	return result;
}

long CNHMWI::SplSetErrorLED(LPCTSTR szOnOff)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x121, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szOnOff);
	return result;
}

long CNHMWI::SplSetCommunicationsLED(LPCTSTR szOnOff)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x122, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szOnOff);
	return result;
}

long CNHMWI::VfdRealTimeTextDisplay(LPCTSTR szTextData, long nOffsetX, long nOffsetY, long nCharSzX, long nCharSzY, long nBoldStyle, long nItalic, LPCTSTR szFontName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x123, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szTextData, nOffsetX, nOffsetY, nCharSzX, nCharSzY, nBoldStyle, nItalic, szFontName);
	return result;
}

long CNHMWI::VfdCurtainDisplay(long nDirection, long nSpeed, long nPattern)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x124, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDirection, nSpeed, nPattern);
	return result;
}

long CNHMWI::PinInitializeEPP()
{
	long result;
	InvokeHelper(0x125, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::PinSetMacKeyName(LPCTSTR szKeyName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x126, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szKeyName);
	return result;
}

long CNHMWI::PinSetPinKeyName(LPCTSTR szKeyName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x127, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szKeyName);
	return result;
}

long CNHMWI::PinImportKey(LPCTSTR szKeyName, LPCTSTR szKeyEncKeyName, LPCTSTR szValue, LPCTSTR szUse)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0x128, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szKeyName, szKeyEncKeyName, szValue, szUse);
	return result;
}

long CNHMWI::PinEncryptECB(LPCTSTR szAlgorithm, LPCTSTR szKeyName, LPCTSTR szKeyEncKeyName, short sPadchar, LPCTSTR szCryptData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR VTS_I2 VTS_BSTR;
	InvokeHelper(0x129, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szAlgorithm, szKeyName, szKeyEncKeyName, sPadchar, szCryptData);
	return result;
}

long CNHMWI::PinDecryptECB(LPCTSTR szAlgorithm, LPCTSTR szKeyName, LPCTSTR szKeyEncKeyName, short sPadchar, LPCTSTR szCryptData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR VTS_I2 VTS_BSTR;
	InvokeHelper(0x12a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szAlgorithm, szKeyName, szKeyEncKeyName, sPadchar, szCryptData);
	return result;
}

CString CNHMWI::PinGetEncryptedData()
{
	CString result;
	InvokeHelper(0x12b, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::PinGetDecryptedData()
{
	CString result;
	InvokeHelper(0x12c, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmDispenseAmount(long nAmount)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x12d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nAmount);
	return result;
}

long CNHMWI::BrmAcceptCash(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x12e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::BrmReset()
{
	long result;
	InvokeHelper(0x12f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmCancelAcceptCash()
{
	long result;
	InvokeHelper(0x130, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmRejectRefused(long nWaitSec)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x131, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nWaitSec);
	return result;
}

long CNHMWI::BrmSetValueOfCash(LPCTSTR szCashValueData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x132, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szCashValueData);
	return result;
}

long CNHMWI::BrmSetMinMaxCST(LPCTSTR szMinCntData, LPCTSTR szMaxCntData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x133, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szMinCntData, szMaxCntData);
	return result;
}

long CNHMWI::BrmSetNumberOfCash(LPCTSTR szCashCntData)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x134, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szCashCntData);
	return result;
}

long CNHMWI::BrmGetNumberOfCST()
{
	long result;
	InvokeHelper(0x135, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetCSTStatus(long nCSTNo)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x136, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCSTNo);
	return result;
}

long CNHMWI::BrmGetValueOfCash(long nCSTNo)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x137, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCSTNo);
	return result;
}

long CNHMWI::BrmGetNumberOfSetCash(long nCSTNo)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x138, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCSTNo);
	return result;
}

CString CNHMWI::BrmGetDispenseOfCST(long nCashAmt)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x139, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nCashAmt);
	return result;
}

long CNHMWI::BrmGetNumberOfDispense(long nCSTNo)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x13a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCSTNo);
	return result;
}

long CNHMWI::BrmGetNumberOfReject(long nCSTNo)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x13b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCSTNo);
	return result;
}

long CNHMWI::BrmGetRetractCSTStatus()
{
	long result;
	InvokeHelper(0x13c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetDepositCSTStatus(long nCashType)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x13d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCashType);
	return result;
}

CString CNHMWI::BrmGetNumberOfRetract()
{
	CString result;
	InvokeHelper(0x13e, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CNHMWI::BrmGetNumberOfDeposit(long nCashType)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x13f, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nCashType);
	return result;
}

long CNHMWI::BrmSetAvailDeposit(long nDepType)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x140, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nDepType);
	return result;
}

long CNHMWI::BrmGetCSTType(long nCSTNo)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x141, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nCSTNo);
	return result;
}

long CNHMWI::SprPrintImage(LPCTSTR szImageName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x142, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		szImageName);
	return result;
}

long CNHMWI::BrmCimGetDeviceStatus()
{
	long result;
	InvokeHelper(0x143, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmCduGetDeviceStatus()
{
	long result;
	InvokeHelper(0x144, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetShutterStatus()
{
	long result;
	InvokeHelper(0x145, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmCimGetShutterStatus()
{
	long result;
	InvokeHelper(0x146, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmCduGetShutterStatus()
{
	long result;
	InvokeHelper(0x147, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduGetShutterStatus()
{
	long result;
	InvokeHelper(0x148, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmGetRetractAction()
{
	long result;
	InvokeHelper(0x149, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmCimGetRetractAction()
{
	long result;
	InvokeHelper(0x14a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::BrmCduGetRetractAction()
{
	long result;
	InvokeHelper(0x14b, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::CduGetRetractAction()
{
	long result;
	InvokeHelper(0x14c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::McuICChipPower(long nActType)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x14d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nActType);
	return result;
}

long CNHMWI::McuICGetChipPowerStatus()
{
	long result;
	InvokeHelper(0x14e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CNHMWI::SnsGetInternalTamper()
{
	long result;
	InvokeHelper(0x14f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CNHMWI::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
